{"version":3,"sources":["supabaseClient.js","routes/routes.js","routes/AdminRoute.js","routes/UserRoute.js","layout/Header.js","layout/SideNav.js","db/profile.js","auth/SignUp.js","auth/LogIn.js","pages/Account.js","db/reservations.js","pages/Check.js","pages/Pay.js","pages/Reservations.js","App.js","reportWebVitals.js","index.js"],"names":["supabase","createClient","process","PAY","RESERVATIONS","ACCOUNT","CHECK","UserRoute","props","type","children","rest","to","Header","session","id","border","Heading","flex","isCreated","Button","onClick","auth","signOut","then","window","location","reload","iconAfter","LogOutIcon","LogInIcon","SideNav","TABLE_NAME","getProfile","a","user","from","select","eq","single","data","error","status","createProfile","values","insert","returning","SignUp","useState","loading","setLoading","email","setEmail","accountType","setAccountType","useEffect","handleSignUp","alert","error_description","message","TextInputField","label","required","placeholder","value","disabled","SelectField","onChange","e","target","isLoading","preventDefault","Auth","handleLogin","signIn","toaster","notify","Pane","padding","Text","Account","setType","created_at","setCreatedAt","Card","checkIfReservationExpired","plate","gt","Date","toISOString","reservations","length","getPastReservations","lt","console","log","getCurrentReservations","createReservation","reservation","user_id","Check","licensePlate","setLicensePlate","reservationExpired","setReservationExpired","handleCheck","warning","isReservationExpired","display","flexDirection","gap","width","marginBottom","Alert","intent","title","INITIAL_DATE","Pay","date","count","setCount","expiry","setExpiry","handlePay","license_plate","success","updatedDate","addMinutes","updateDate","backgroundColor","elevation","borderRadius","marginX","alignItems","Strong","format","size","height","Reservations","past","setPast","current","setCurrent","fetchData","paddingX","Table","Head","TextHeaderCell","Body","map","item","Row","TextCell","formatDistanceToNow","addSuffix","formatDistanceStrict","roundingMethod","Home","setSession","getProfileAndSetSession","res","finally","onAuthStateChange","_event","Spinner","className","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.d290a457.chunk.js","sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n","export const PAY = \"/pay\";\n\nexport const RESERVATIONS = \"/reservations\";\n\nexport const ACCOUNT = \"/account\";\n\nexport const CHECK = \"/check\";\n","import { Redirect, Route } from \"react-router\";\nimport { RESERVATIONS } from \"./routes\";\n\nexport default function UserRoute(props) {\n  const { type, children, ...rest } = props;\n  if (type === \"admin\") return <Route {...rest}>{children}</Route>;\n  return <Redirect to={RESERVATIONS} />;\n}\n","import { Redirect, Route } from \"react-router\";\nimport { RESERVATIONS } from \"./routes\";\n\nexport default function UserRoute(props) {\n  const { type, children, ...rest } = props;\n  if (type === \"user\") return <Route {...rest}>{children}</Route>;\n  return <Redirect to={RESERVATIONS} />;\n}\n","import { Button, Heading, LogInIcon, LogOutIcon } from \"evergreen-ui\";\nimport { supabase } from \"../supabaseClient\";\n\nexport default function Header({ session }) {\n  return (\n    <header id=\"header\" border=\"default\">\n      <Heading flex={1}>SupaParking</Heading>\n      {session && session.isCreated ? (\n        <Button\n          onClick={() => {\n            supabase.auth.signOut().then(() => {\n              // TODO: get rid of hack by using react-router\n              window.location.reload();\n            });\n          }}\n          iconAfter={LogOutIcon}\n        >\n          Log Out\n        </Button>\n      ) : (\n        <Button iconAfter={LogInIcon}>Log In</Button>\n      )}\n    </header>\n  );\n}\n","import { Button } from \"evergreen-ui\";\nimport { Link } from \"react-router-dom\";\nimport { ACCOUNT, CHECK, PAY, RESERVATIONS } from \"../routes/routes\";\n\nexport default function SideNav({ type }) {\n  return (\n    <nav>\n      {type === \"user\" ? (\n        <Link to={PAY}>\n          <Button>Pay</Button>\n        </Link>\n      ) : null}\n      {type === \"admin\" ? (\n        <Link to={CHECK}>\n          <Button>Check</Button>\n        </Link>\n      ) : null}\n      <Link to={RESERVATIONS}>\n        <Button>Reservations</Button>\n      </Link>\n      <Link to={ACCOUNT}>\n        <Button>Account</Button>\n      </Link>\n    </nav>\n  );\n}\n","import { supabase } from \"../supabaseClient\";\n\nconst TABLE_NAME = \"profiles\";\n\nexport const getProfile = async () => {\n  const user = supabase.auth.user();\n  if (!user) return null;\n  let { data, error, status } = await supabase\n    .from(TABLE_NAME)\n    .select(\"type\")\n    .eq(\"id\", user.id)\n    .single();\n\n  // console.log(data, error, status);\n  return { data, error, status };\n};\n\nexport const createProfile = async (type) => {\n  const user = supabase.auth.user();\n  const values = [\n    {\n      id: user.id,\n      type,\n    },\n  ];\n\n  return supabase.from(TABLE_NAME).insert(values, {\n    // Don't return the value after inserting\n    returning: \"minimal\",\n  });\n};\n","import { useEffect, useState } from \"react\";\nimport { Button, SelectField, TextInputField } from \"evergreen-ui\";\nimport { createProfile } from \"../db/profile\";\nimport { supabase } from \"../supabaseClient\";\n\nexport default function SignUp() {\n  const [loading, setLoading] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [accountType, setAccountType] = useState(\"user\");\n\n  useEffect(() => {\n    const user = supabase.auth.user();\n    setEmail(user.email);\n  }, []);\n\n  const handleSignUp = async (type) => {\n    try {\n      setLoading(true);\n      const { error } = await createProfile(type);\n      if (error) throw error;\n      setLoading(false);\n      // TODO: get rid of hack by using react-router\n      window.location.reload();\n    } catch (error) {\n      alert(error.error_description || error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form>\n      <TextInputField\n        id=\"email\"\n        label=\"Email\"\n        required\n        type=\"email\"\n        placeholder=\"Your email\"\n        value={email}\n        disabled\n      />\n\n      <SelectField\n        label=\"Account type\"\n        required\n        value={accountType}\n        onChange={(e) => setAccountType(e.target.value)}\n      >\n        <option value=\"user\">User</option>\n        <option value=\"admin\">Admin</option>\n      </SelectField>\n\n      <Button\n        isLoading={loading}\n        onClick={(e) => {\n          e.preventDefault();\n          handleSignUp(accountType);\n        }}\n      >\n        Continue\n      </Button>\n    </form>\n  );\n}\n","import {\n  Button,\n  Heading,\n  Pane,\n  Text,\n  TextInputField,\n  toaster,\n} from \"evergreen-ui\";\nimport { useState } from \"react\";\nimport { supabase } from \"../supabaseClient\";\n\nexport default function Auth() {\n  const [loading, setLoading] = useState(false);\n  const [email, setEmail] = useState(\"\");\n\n  const handleLogin = async (email) => {\n    try {\n      setLoading(true);\n      const { error } = await supabase.auth.signIn({ email });\n      if (error) throw error;\n\n      toaster.notify(\"Check your email for the login link!\");\n      setEmail(\"\");\n    } catch (error) {\n      alert(error.error_description || error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Pane padding={40}>\n      <Heading>Supabase + React</Heading>\n      <Text>Sign in via magic link with your email below</Text>\n\n      <TextInputField\n        id=\"email\"\n        label=\"Email\"\n        required\n        type=\"email\"\n        placeholder=\"Your email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      />\n\n      <Button\n        isLoading={loading}\n        onClick={(e) => {\n          e.preventDefault();\n          handleLogin(email);\n        }}\n      >\n        Send magic link\n      </Button>\n    </Pane>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { supabase } from \"../supabaseClient\";\nimport { Card, Heading } from \"evergreen-ui\";\n\nexport default function Account({ session }) {\n  const [loading, setLoading] = useState(true);\n  const [email, setEmail] = useState(null);\n  const [type, setType] = useState(null);\n  const [created_at, setCreatedAt] = useState(null);\n\n  useEffect(() => {\n    getProfile();\n  }, [session]);\n\n  async function getProfile() {\n    try {\n      setLoading(true);\n\n      const user = supabase.auth.user();\n\n      setEmail(user.email);\n\n      let { data, error, status } = await supabase\n        .from(\"profiles\")\n        .select(`*`)\n        .eq(\"id\", user.id)\n        .single();\n\n      if (error && status !== 406) {\n        throw error;\n      }\n\n      if (data) {\n        setType(data.type);\n        setCreatedAt(data.created_at);\n      }\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return (\n    <Card>\n      <Heading>Email: {email}</Heading>\n      <Heading>Type: {type}</Heading>\n      <Heading>Created at: {created_at}</Heading>\n    </Card>\n  );\n}\n","import { supabase } from \"../supabaseClient\";\n\nconst TABLE_NAME = \"reservations\";\n\nexport const checkIfReservationExpired = async (plate) => {\n  // get reservations that match license plate and have expiry in the future\n  const reservations = await supabase\n    .from(TABLE_NAME)\n    .select(\"*\")\n    .eq(\"license_plate\", plate)\n    .gt(\"expiry\", new Date().toISOString());\n\n  // if we have ongoing reservations for this license plate, isReservationExpired = false\n  return !reservations.length;\n};\n\nexport const getPastReservations = async () => {\n  const reservations = await supabase\n    .from(TABLE_NAME)\n    .select(\"*\")\n    .lt(\"expiry\", new Date().toISOString());\n  console.log(reservations);\n  return reservations;\n};\n\nexport const getCurrentReservations = async () => {\n  const reservations = await supabase\n    .from(TABLE_NAME)\n    .select(\"*\")\n    .gt(\"expiry\", new Date().toISOString());\n  console.log(reservations);\n  return reservations;\n};\n\nexport const createReservation = (reservation) => {\n  const user = supabase.auth.user();\n  const values = [{ user_id: user.id, ...reservation }];\n  return supabase.from(TABLE_NAME).insert(values);\n};\n","import { useState } from \"react\";\nimport { Alert, Button, Pane, TextInputField, toaster } from \"evergreen-ui\";\nimport { checkIfReservationExpired } from \"../db/reservations\";\n\nexport default function Check() {\n  const [loading, setLoading] = useState(false);\n  const [licensePlate, setLicensePlate] = useState(\"\");\n  const [reservationExpired, setReservationExpired] = useState(null);\n\n  const handleCheck = async () => {\n    try {\n      setLoading(true);\n\n      if (!licensePlate) {\n        toaster.warning(\"Please enter a license plate.\");\n        return;\n      }\n\n      const isReservationExpired = await checkIfReservationExpired(\n        licensePlate\n      );\n      console.log(\"isReservationExpired\", isReservationExpired);\n\n      setReservationExpired(isReservationExpired);\n      setLicensePlate(\"\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Pane display=\"flex\" flexDirection=\"column\" gap={8} width={400}>\n      <TextInputField\n        id=\"license-plate\"\n        type=\"text\"\n        required\n        label=\"License plate\"\n        placeholder=\"Enter license plate\"\n        value={licensePlate}\n        onChange={(e) => setLicensePlate(e.target.value)}\n        marginBottom={0}\n      />\n\n      <Button\n        isLoading={loading}\n        onClick={(e) => {\n          e.preventDefault();\n          handleCheck();\n        }}\n      >\n        Check\n      </Button>\n\n      {!loading && reservationExpired !== null ? (\n        reservationExpired ? (\n          <Alert\n            intent=\"success\"\n            title={`${licensePlate} is valid.`}\n            marginBottom={32}\n          />\n        ) : (\n          <Alert intent=\"danger\" title={`${licensePlate} has expired.`} />\n        )\n      ) : (\n        \"Enter a license plate.\"\n      )}\n    </Pane>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Card,\n  Heading,\n  Strong,\n  TextInputField,\n  toaster,\n} from \"evergreen-ui\";\nimport { format, addMinutes } from \"date-fns\";\nimport { createReservation } from \"../db/reservations\";\n\nconst INITIAL_DATE = new Date();\n\nexport default function Pay() {\n  const INITIAL_COUNT = 1;\n\n  const [loading, setLoading] = useState(false);\n  const [licensePlate, setLicensePlate] = useState(\"\");\n  const [count, setCount] = useState(INITIAL_COUNT);\n  const [expiry, setExpiry] = useState(INITIAL_DATE);\n\n  const handlePay = async () => {\n    try {\n      setLoading(true);\n\n      if (!licensePlate) {\n        toaster.warning(\"Please enter a license plate.\");\n        return;\n      }\n\n      const reservation = {\n        license_plate: licensePlate,\n        expiry: expiry.toISOString(),\n      };\n      console.log(reservation);\n\n      const { error } = await createReservation(reservation);\n      if (error) throw error;\n\n      toaster.success(\"You have paid for the parking spot.\");\n\n      setLicensePlate(\"\");\n      setCount(INITIAL_COUNT);\n    } catch (error) {\n      alert(error.error_description || error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatDate = (date) =>\n    `Park until ${format(date, \"HH:mm (dd/MM/yyyy)\")}`;\n\n  const formatTime = () => `in ${5 * count} minutes`;\n\n  const refreshCount = () => setCount(INITIAL_COUNT);\n\n  const decrementCount = () => {\n    if (count > INITIAL_COUNT) {\n      setCount(count - 1);\n    }\n  };\n\n  const incrementCount = () => setCount(count + 1);\n\n  useEffect(() => {\n    const updateDate = () => {\n      const updatedDate = addMinutes(INITIAL_DATE, count * 5);\n      setExpiry(updatedDate);\n    };\n\n    updateDate();\n  }, [count]);\n\n  return (\n    <Card\n      backgroundColor=\"#F3F6FF\"\n      elevation={1}\n      borderRadius={4}\n      marginX={16}\n      padding={24}\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      gap={24}\n    >\n      <TextInputField\n        id=\"license-plate\"\n        type=\"text\"\n        required\n        label=\"License plate\"\n        placeholder=\"Enter license plate\"\n        value={licensePlate}\n        onChange={(e) => setLicensePlate(e.target.value)}\n        marginBottom={0}\n      />\n\n      <Strong>{formatDate(expiry)}</Strong>\n\n      <Card display=\"flex\" gap=\"10px\">\n        <Button onClick={() => refreshCount()}>🔄</Button>\n        <Button onClick={() => decrementCount()}>➖</Button>\n        <Heading size={800}>{formatTime(count)}</Heading>\n        <Button onClick={() => incrementCount()}>➕</Button>\n      </Card>\n\n      <Button\n        height={48}\n        isLoading={loading}\n        onClick={(e) => {\n          e.preventDefault();\n          handlePay();\n        }}\n        gap={8}\n      >\n        Pay\n        <span>🤑</span>\n      </Button>\n    </Card>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Pane, Table } from \"evergreen-ui\";\nimport { format, formatDistanceStrict, formatDistanceToNow } from \"date-fns\";\nimport {\n  getCurrentReservations,\n  getPastReservations,\n} from \"../db/reservations\";\n\nexport default function Reservations() {\n  const [past, setPast] = useState([]);\n  const [current, setCurrent] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const { data: past } = await getPastReservations();\n      setPast(past);\n\n      const { data: current } = await getCurrentReservations();\n      setCurrent(current);\n    };\n\n    fetchData();\n  }, []);\n  return (\n    <Pane paddingX={16}>\n      <Table>\n        <Table.Head>\n          <Table.TextHeaderCell>Plate</Table.TextHeaderCell>\n          <Table.TextHeaderCell>Remaining time</Table.TextHeaderCell>\n          <Table.TextHeaderCell>Expires</Table.TextHeaderCell>\n        </Table.Head>\n\n        <Table.Body height={240}>\n          {current.map((item) => (\n            <Table.Row key={item.id}>\n              <Table.TextCell>{item.license_plate}</Table.TextCell>\n              <Table.TextCell>\n                {formatDistanceToNow(new Date(item.expiry), {\n                  addSuffix: true,\n                })}\n              </Table.TextCell>\n              <Table.TextCell>\n                {format(new Date(item.expiry), \"dd/MM/yyyy HH:mm\")}\n              </Table.TextCell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n\n      <Table>\n        <Table.Head>\n          <Table.TextHeaderCell>Plate</Table.TextHeaderCell>\n          <Table.TextHeaderCell>Duration</Table.TextHeaderCell>\n          <Table.TextHeaderCell>Start</Table.TextHeaderCell>\n          <Table.TextHeaderCell>End</Table.TextHeaderCell>\n        </Table.Head>\n\n        <Table.Body height={240}>\n          {past.map((item) => (\n            <Table.Row key={item.id}>\n              <Table.TextCell>{item.license_plate}</Table.TextCell>\n              <Table.TextCell>\n                {formatDistanceStrict(\n                  new Date(item.created_at),\n                  new Date(item.expiry),\n                  {\n                    roundingMethod: \"ceil\",\n                  }\n                )}\n              </Table.TextCell>\n              <Table.TextCell>\n                {format(new Date(item.created_at), \"dd/MM/yyyy HH:mm\")}\n              </Table.TextCell>\n              <Table.TextCell>\n                {format(new Date(item.expiry), \"dd/MM/yyyy HH:mm\")}\n              </Table.TextCell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </Pane>\n  );\n}\n","import \"./index.css\";\nimport { useState, useEffect } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { Spinner } from \"evergreen-ui\";\n\nimport { supabase } from \"./supabaseClient\";\n\nimport { ACCOUNT, CHECK, PAY, RESERVATIONS } from \"./routes/routes\";\nimport AdminRoute from \"./routes/AdminRoute\";\nimport UserRoute from \"./routes/UserRoute\";\n\nimport Header from \"./layout/Header\";\nimport SideNav from \"./layout/SideNav\";\nimport SignUp from \"./auth/SignUp\";\nimport LogIn from \"./auth/LogIn\";\nimport Account from \"./pages/Account\";\nimport Check from \"./pages/Check\";\nimport Pay from \"./pages/Pay\";\nimport Reservations from \"./pages/Reservations\";\nimport { getProfile } from \"./db/profile\";\n\nexport default function Home() {\n  const [loading, setLoading] = useState(true);\n  const [session, setSession] = useState(null);\n\n  useEffect(() => {\n    async function getProfileAndSetSession() {\n      getProfile()\n        .then((res) => {\n          if (!res) return;\n          const { data, error, status } = res;\n          const isCreated = data && !error && status === 200;\n          console.log(\n            isCreated ? \"User exists in DB.\" : \"User does not exist in DB.\"\n          );\n          const session = {\n            ...supabase.auth.session(),\n            isCreated,\n            type: data.type,\n          };\n          setSession(session);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n\n    getProfileAndSetSession();\n\n    supabase.auth.onAuthStateChange(async (_event, session) => {\n      getProfileAndSetSession();\n    });\n  }, []);\n\n  return loading ? (\n    <Spinner />\n  ) : (\n    <>\n      {!session ? (\n        <LogIn />\n      ) : session.isCreated ? (\n        <>\n          <Header session={session} />\n          <div className=\"container\">\n            <SideNav type={session.type} />\n            <main>\n              <Switch>\n                <UserRoute type={session.type} path={PAY} exact>\n                  <Pay />\n                </UserRoute>\n                <AdminRoute type={session.type} path={CHECK} exact>\n                  <Check />\n                </AdminRoute>\n                <Route path={RESERVATIONS} exact>\n                  <Reservations />\n                </Route>\n                <Route path={ACCOUNT} exact>\n                  <Account session={session} />\n                </Route>\n                <Redirect to={RESERVATIONS} />\n              </Switch>\n            </main>\n          </div>\n        </>\n      ) : (\n        <SignUp />\n      )}\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename=\"/\">\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}